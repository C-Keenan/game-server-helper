#!/usr/bin/env bash
asciilogo=$(cat gsh/messages/ascii-art/ascii-logo.txt)
echo "$asciilogo"
printf '\n'
echo "Would you like to install 'Game Server Helper'? yes/no"
read rsp
rsp=$(echo $rsp | awk '{print tolower($0)}')
clear
if [ -f /usr/bin/sudo ]
then
    if [ $EUID -eq 0 ]
    then
        if [ "$rsp" == "yes" ]
        then
            if [ -d /usr/gsh ]
            then
                if [ -f /usr/bin/docker ]
                then
                    echo "Docker detected. Not installing Docker and Docker Compose."
                elif ! [ -f /usr/bin/docker ]
                then
                    echo "Docker not detected."
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    bash add-docker-repo-nosudo 2>/dev/null 1>/dev/null
                    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 2>/dev/null 1>/dev/null
                    echo "Would you like to make sure the docker system installed properly by running 'docker run hello-world'? yes/no"
                    read rsp3
                    rsp3=$(echo $rsp3 | awk '{print tolower($0)}')
                    if [ $rsp3 == 'yes' ]
                    then
                        docker run hello-world
                    elif [ $rsp3 == 'no' ]
                    then
                        echo "Understood."
                    fi
                fi
                if [ -f /usr/bin/colrm ]
                then
                    echo "Colrm utility already installed. Skipping step."
                elif ! [ -f /usr/bin/colrm ]
                then
                    echo "Colrm utility not detected."
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    apt-get install -y bsdutils bsdmainutils bsdextrautils 2>/dev/null 1>/dev/null
                    echo "Installation of bsdutils bsdmainutils bsdextrautils (contains colrm utility) finished."
                fi
                if [ -f /usr/bin/jq ]
                then
                    echo "JQUERY already installed skipping."
                elif ! [ -f /usr/bin/jq ]
                then
                    echo "JQUERY not detected"
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    apt-get install -y jq
                    echo "Installation of jq finished."
                fi
                if [ -f /usr/bin/setfacl ]
                then
                    echo "acl already installed skipping."
                elif ! [ -f /usr/bin/setfacl ]
                then
                    echo "acl not detected"
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    apt-get install -y acl
                    echo "Installation of acl finished."
                fi
                als=$(cat /${HOME}/.bashrc | grep gsh)
                if [ "$als" == "" ]
                then
                    echo "alias gsh='bash /usr/gsh/script-files/gsh'" >> ~/.bashrc
                fi
                echo "Do you have a tar archive from a previous install?(y/N)"
                read ans
                ans="${ans:-n}"
                ans=$(echo $ans | awk '{print tolower($0)}')
                if [ "$ans" == "y" ]
                then
                    echo "What is the full file path of the tar archive?(/path/to/archive/gsh-docker-archive.tar.gz)"
                    read filepath
                    tar -xzf $filepath /
                    ec=$?
                    if [ $ec -eq 0 ]
                    then
                        echo "Extracted contents of gsh-docker-archive.tar.gz successfully. Moving to next step."
                    else
                        echo "Failed to properly extract archive contents! Exiting..."
                        exit 1
                    fi
                    cp -r ./gsh/messages /usr/gsh
                    cp -r ./gsh/script-files /usr/gsh
                else
                    cp -r ./gsh /usr
                fi
            elif ! [ -d /usr/gsh ]
            then
                if [ -f /usr/bin/docker ]
                then
                    echo "Docker detected. Not installing Docker and Docker Compose."
                elif ! [ -f /usr/bin/docker ]
                then
                    echo "Docker not detected."
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    bash add-docker-repo-nosudo 2>/dev/null 1>/dev/null
                    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 2>/dev/null 1>/dev/null
                    echo "Would you like to make sure the docker system installed properly by running 'docker run hello-world'? yes/no"
                    read rsp3
                    rsp3=$(echo $rsp3 | awk '{print tolower($0)}')
                    if [ $rsp3 == 'yes' ]
                    then
                        docker run hello-world
                    elif [ $rsp3 == 'no' ]
                    then
                        echo "Understood."
                    fi
                fi
                if [ -f /usr/bin/colrm ]
                then
                    echo "Colrm utility already installed. Skipping step."
                elif ! [ -f /usr/bin/colrm ]
                then
                    echo "Colrm utility not detected."
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    apt-get install -y bsdutils bsdmainutils bsdextrautils 2>/dev/null 1>/dev/null
                    echo "Installation of bsdutils bsdmainutils bsdextrautils (contains colrm utility) finished."
                fi
                if [ -f /usr/bin/jq ]
                then
                    echo "JQUERY already installed skipping."
                elif ! [ -f /usr/bin/jq ]
                then
                    echo "JQUERY not detected"
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    apt-get install -y jq
                    echo "Installation of jq finished."
                fi
                if [ -f /usr/bin/setfacl ]
                then
                    echo "acl already installed skipping."
                elif ! [ -f /usr/bin/setfacl ]
                then
                    echo "acl not detected"
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    apt-get install -y acl
                    echo "Installation of acl finished."
                fi
                mkdir -p /usr/gsh
                als=$(cat /${HOME}/.bashrc | grep gsh)
                if [ "$als" == "" ]
                then
                    echo "alias gsh='bash /usr/gsh/script-files/gsh'" >> ~/.bashrc
                fi
                echo "Do you have a tar archive from a previous install?(y/N)"
                read ans
                ans="${ans:-n}"
                ans=$(echo $ans | awk '{print tolower($0)}')
                if [ "$ans" == "y" ]
                then
                    echo "What is the full file path of the tar archive?(/path/to/archive/gsh-docker-archive.tar.gz)"
                    read filepath
                    tar -xzf $filepath /
                    ec=$?
                    if [ $ec -eq 0 ]
                    then
                        echo "Extracted contents if gsh-docker-archive.tar.gz successfully. Moving to next step."
                    else
                        echo "Failed to properly extract archive contents! Exiting..."
                        exit 1
                    fi
                    cp -r ./gsh/messages /usr/gsh
                    cp -r ./gsh/script-files /usr/gsh
                else
                    cp -r ./gsh /usr
                fi
            fi
            if ! [ -d /usr/gsh/environment ]
            then
                mkdir -p /usr/gsh/environment
                cp ./examples/donation-ctrl.env /usr/gsh/environment/donation-ctrl.env
                cp ./examples/donation-ticker.env /usr/gsh/environment/donation-ticker.env
                setfacl -m u:${USER}:rw /usr/gsh/environment/donation-ticker.env
            fi
            if ! [ -f /usr/gsh/docker/factorio/factorio.env ]
            then
                cp ./examples/factorio.env /usr/gsh/docker/factorio/factorio.env
            fi
            if ! [ -f /usr/gsh/docker/satisfactory/satisfactory.env ]
            then
                cp ./examples/satisfactory.env /usr/gsh/docker/satisfactory/satisfactory.env
            fi
            if ! [ -f /usr/gsh/docker/minecraft/minecraft.env ]
            then
                cp ./examples/minecraft.env /usr/gsh/docker/minecraft/minecraft.env
            fi
            if ! [ -f /usr/gsh/docker/veloren/veloren.env ]
            then
                cp ./examples/veloren.env /usr/gsh/docker/veloren/veloren.env
            fi
            echo "$asciilogo"
            printf '\n'
            echo "Thank you for 'installing' Game Server Helper!"
            echo "If you have any feature requests please reach"
            echo "out to dev+gsh-feature-requests@lollypopstealer.com"
            echo "with any game's that can run through docker or"
            echo "that have easy to read documentation for running"
            echo "their server on linux. Have a great day!"
        elif [ $rsp == 'no' ]
        then
            echo "$asciilogo"
            echo "Thank you for running the install script for 'Game Server Helper', however, you did not confirm the installation so the script will now exit. Have a great day!"
        fi
    elif [ $EUID -ge 1000 ]
    then
        if [ $rsp == 'yes' ]
        then
            if [ -d /usr/gsh ]
            then
                if [ -f /usr/bin/docker ]
                then
                    echo "Docker detected. Not installing Docker and Docker Compose."
                    sudo usermod -aG docker ${USER}
                elif ! [ -f /usr/bin/docker ]
                then
                    echo "Docker not detected."
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    bash add-docker-repo 2>/dev/null 1>/dev/null
                    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 2>/dev/null 1>/dev/null
                    sudo usermod -aG docker ${USER}
                    echo "Would you like to make sure the docker system installed properly by running 'docker run hello-world'? yes/no"
                    read rsp3
                    rsp3=$(echo $rsp3 | awk '{print tolower($0)}')
                    if [ $rsp3 == 'yes' ]
                    then
                        sudo docker run hello-world
                    elif [ $rsp3 == 'no' ]
                    then
                        echo "Understood."
                    fi
                fi
                if [ -f /usr/bin/colrm ]
                then
                    echo "Colrm utility already installed. Skipping step."
                elif ! [ -f /usr/bin/colrm ]
                then
                    echo "Colrm utility not detected."
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    sudo apt-get install -y bsdutils bsdmainutils bsdextrautils 2>/dev/null 1>/dev/null
                    echo "Installation of bsdutils bsdmainutils bsdextrautils (contains colrm utility) finished."
                fi
                if [ -f /usr/bin/jq ]
                then
                    echo "JQUERY already installed skipping."
                elif ! [ -f /usr/bin/jq ]
                then
                    echo "JQUERY not detected"
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    sudo apt-get install -y jq
                    echo "Installation of jq finished."
                fi
                if [ -f /usr/bin/setfacl ]
                then
                    echo "acl already installed skipping."
                elif ! [ -f /usr/bin/setfacl ]
                then
                    echo "acl not detected"
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    sudo apt-get install -y acl
                    echo "Installation of acl finished."
                fi
                als=$(cat /${HOME}/.bashrc | grep gsh)
                if [ "$als" == "" ]
                then
                    sudo echo "alias gsh='bash /usr/gsh/script-files/gsh'" >> ~/.bashrc
                fi
                echo "Do you have a tar archive from a previous install?(y/N)"
                read ans
                ans="${ans:-n}"
                ans=$(echo $ans | awk '{print tolower($0)}')
                if [ "$ans" == "y" ]
                then
                    echo "What is the full file path of the tar archive?(/path/to/archive/gsh-docker-archive.tar.gz)"
                    read filepath
                    sudo tar -xzf $filepath /
                    ec=$?
                    if [ $ec -eq 0 ]
                    then
                        echo "Extracted contents if gsh-docker-archive.tar.gz successfully. Moving to next step."
                    else
                        echo "Failed to properly extract archive contents! Exiting..."
                        exit 1
                    fi
                    sudo cp -r ./gsh/messages /usr/gsh
                    sudo cp -r ./gsh/script-files /usr/gsh
                else
                    sudo cp -r ./gsh /usr
                fi
            elif ! [ -d /usr/gsh ]
            then
                if [ -f /usr/bin/docker ]
                then
                    echo "Docker detected. Not installing Docker and Docker Compose."
                    sudo usermod -aG docker ${USER}
                elif ! [ -f /usr/bin/docker ]
                then
                    echo "Docker not detected."
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    bash add-docker-repo 2>/dev/null 1>/dev/null
                    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 2>/dev/null 1>/dev/null
                    sudo usermod -aG docker ${USER}
                    echo "Would you like to make sure the docker system installed properly by running 'docker run hello-world'? yes/no"
                    read rsp3
                    rsp3=$(echo $rsp3 | awk '{print tolower($0)}')
                    if [ $rsp3 == 'yes' ]
                    then
                        sudo docker run hello-world
                    elif [ $rsp3 == 'no' ]
                    then
                        echo "Understood."
                    fi
                fi
                if [ -f /usr/bin/colrm ]
                then
                    echo "Colrm utility already installed. Skipping step."
                elif ! [ -f /usr/bin/colrm ]
                then
                    echo "Colrm utility not detected."
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    sudo apt-get install -y bsdutils bsdmainutils bsdextrautils 2>/dev/null 1>/dev/null
                    echo "Installation of bsdutils bsdmainutils bsdextrautils (contains colrm utility) finished."
                fi
                if [ -f /usr/bin/jq ]
                then
                    echo "JQUERY already installed skipping."
                elif ! [ -f /usr/bin/jq ]
                then
                    echo "JQUERY not detected"
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    sudo apt-get install -y jq
                    echo "Installation of jq finished."
                fi
                if [ -f /usr/bin/setfacl ]
                then
                    echo "acl already installed skipping."
                elif ! [ -f /usr/bin/setfacl ]
                then
                    echo "acl not detected"
                    echo "Please wait patiently for installation to finish."
                    sleep 10
                    sudo apt-get install -y acl
                    echo "Installation of acl finished."
                fi
                sudo mkdir -p /usr/gsh
                als=$(cat /${HOME}/.bashrc | grep gsh)
                if [ "$als" == "" ]
                then
                    sudo echo "alias gsh='bash /usr/gsh/script-files/gsh'" >> ~/.bashrc
                fi
                echo "Do you have a tar archive from a previous install?(y/N)"
                read ans
                ans="${ans:-n}"
                ans=$(echo $ans | awk '{print tolower($0)}')
                if [ "$ans" == "y" ]
                then
                    echo "What is the full file path of the tar archive?(/path/to/archive/gsh-docker-archive.tar.gz)"
                    read filepath
                    sudo tar -xzf $filepath /
                    ec=$?
                    if [ $ec -eq 0 ]
                    then
                        echo "Extracted contents if gsh-docker-archive.tar.gz successfully. Moving to next step."
                    else
                        echo "Failed to properly extract archive contents! Exiting..."
                        exit 1
                    fi
                    sudo cp -r ./gsh/messages /usr/gsh
                    sudo cp -r ./gsh/script-files /usr/gsh
                else
                    sudo cp -r ./gsh /usr
                fi
            fi
            if ! [ -d /usr/gsh/environment ]
            then
                sudo mkdir -p /usr/gsh/environment
                sudo cp ./examples/donation-ctrl.env /usr/gsh/environment/donation-ctrl.env
                sudo cp ./examples/donation-ticker.env /usr/gsh/environment/donation-ticker.env
                sudo setfacl -m u:${USER}:rw /usr/gsh/environment/donation-ticker.env
            fi
            if ! [ -f /usr/gsh/docker/factorio/factorio.env ]
            then
                sudo cp ./examples/factorio.env /usr/gsh/docker/factorio/factorio.env
            fi
            if ! [ -f /usr/gsh/docker/satisfactory/satisfactory.env ]
            then
                sudo cp ./examples/satisfactory.env /usr/gsh/docker/satisfactory/satisfactory.env
            fi
            if ! [ -f /usr/gsh/docker/minecraft/minecraft.env ]
            then
                sudo cp ./examples/minecraft.env /usr/gsh/docker/minecraft/minecraft.env
            fi
            if ! [ -f /usr/gsh/docker/veloren/veloren.env ]
            then
                sudo cp ./examples/veloren.env /usr/gsh/docker/veloren/veloren.env
            fi
            echo "$asciilogo"
            printf '\n'
            echo "Thank you for 'installing' Game Server Helper!"
            echo "If you have any feature requests please reach"
            echo "out to dev+gsh-feature-requests@lollypopstealer.com"
            echo "with any game's that can run through docker or"
            echo "that have easy to read documentation for running"
            echo "their server on linux. Have a great day!"
        elif [ $rsp == 'no' ]
        then
            echo "$asciilogo"
            echo "Thank you for running the install script for 'Game Server Helper', however, you did not confirm the installation so the script will now exit. Have a great day!"
        fi
    fi
elif ! [ -f /usr/bin/sudo ]
then
    if [ $rsp == 'yes' ]
    then
        if [ -d /usr/gsh ]
        then
            if [ -f /usr/bin/docker ]
            then
                echo "Docker detected. Not installing Docker and Docker Compose."
            elif ! [ -f /usr/bin/docker ]
            then
                echo "Docker not detected."
                echo "Please wait patiently for installation to finish."
                sleep 10
                bash add-docker-repo-nosudo 2>/dev/null 1>/dev/null
                apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 2>/dev/null 1>/dev/null
                usermod -aG docker ${USER}
                echo "Would you like to make sure the docker system installed properly by running 'docker run hello-world'? yes/no"
                read rsp3
                rsp3=$(echo $rsp3 | awk '{print tolower($0)}')
                if [ $rsp3 == 'yes' ]
                then
                    docker run hello-world
                elif [ $rsp3 == 'no' ]
                then
                    echo "Understood."
                fi
            fi
            if [ -f /usr/bin/colrm ]
            then
                echo "Colrm utility already installed. Skipping step."
            elif ! [ -f /usr/bin/colrm ]
            then
                echo "Colrm utility not detected."
                echo "Please wait patiently for installation to finish."
                sleep 10
                apt-get install -y bsdutils bsdmainutils bsdextrautils 2>/dev/null 1>/dev/null
                echo "Installation of bsdutils bsdmainutils bsdextrautils (contains colrm utility) finished."
            fi
            if [ -f /usr/bin/jq ]
            then
                echo "JQUERY already installed skipping."
            elif ! [ -f /usr/bin/jq ]
            then
                echo "JQUERY not detected"
                echo "Please wait patiently for installation to finish."
                sleep 10
                apt-get install -y jq
                echo "Installation of jq finished."
            fi
            if [ -f /usr/bin/setfacl ]
            then
                echo "acl already installed skipping."
            elif ! [ -f /usr/bin/setfacl ]
            then
                echo "acl not detected"
                echo "Please wait patiently for installation to finish."
                sleep 10
                apt-get install -y acl
                echo "Installation of acl finished."
            fi
            als=$(cat /${HOME}/.bashrc | grep gsh)
            if [ "$als" == "" ]
            then
                echo "alias gsh='bash /usr/gsh/script-files/gsh'" >> ~/.bashrc
            fi
            echo "Do you have a tar archive from a previous install?(y/N)"
            read ans
            ans="${ans:-n}"
            ans=$(echo $ans | awk '{print tolower($0)}')
            if [ "$ans" == "y" ]
            then
                echo "What is the full file path of the tar archive?(/path/to/archive/gsh-docker-archive.tar.gz)"
                read filepath
                tar -xzf $filepath /
                ec=$?
                if [ $ec -eq 0 ]
                then
                    echo "Extracted contents if gsh-docker-archive.tar.gz successfully. Moving to next step."
                else
                    echo "Failed to properly extract archive contents! Exiting..."
                    exit 1
                fi
                cp -r ./gsh/messages /usr/gsh
                cp -r ./gsh/script-files /usr/gsh
            else
                cp -r ./gsh /usr
            fi
        elif ! [ -d /usr/gsh ]
        then
            if [ -f /usr/bin/docker ]
            then
                echo "Docker detected. Not installing Docker and Docker Compose."
            elif ! [ -f /usr/bin/docker ]
            then
                echo "Docker not detected."
                echo "Please wait patiently for installation to finish."
                sleep 10
                bash add-docker-repo-nosudo 2>/dev/null 1>/dev/null
                apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 2>/dev/null 1>/dev/null
                usermod -aG docker ${USER}
                echo "Docker installation finished"
                echo "Would you like to make sure the docker system installed properly by running 'docker run hello-world'? yes/no"
                read rsp3
                rsp3=$(echo $rsp3 | awk '{print tolower($0)}')
                if [ $rsp3 == 'yes' ]
                then
                    docker run hello-world
                elif [ $rsp3 == 'no' ]
                then
                    echo "Understood."
                fi
            fi
            if [ -f /usr/bin/colrm ]
            then
                echo "Colrm utility already installed. Skipping step."
            elif ! [ -f /usr/bin/colrm ]
            then
                echo "Colrm utility not detected."
                echo "Please wait patiently for installation to finish."
                sleep 10
                apt-get install -y bsdutils bsdmainutils bsdextrautils 2>/dev/null 1>/dev/null
                echo "Installation of bsdutils bsdmainutils bsdextrautils (contains colrm utility) finished."
            fi
            if [ -f /usr/bin/jq ]
            then
                echo "JQUERY already installed skipping."
            elif ! [ -f /usr/bin/jq ]
            then
                echo "JQUERY not detected"
                echo "Please wait patiently for installation to finish."
                sleep 10
                apt-get install -y jq
                echo "Installation of jq finished."
            fi
            if [ -f /usr/bin/setfacl ]
            then
                echo "acl already installed skipping."
            elif ! [ -f /usr/bin/setfacl ]
            then
                echo "acl not detected"
                echo "Please wait patiently for installation to finish."
                sleep 10
                apt-get install -y acl
                echo "Installation of acl finished."
            fi
            mkdir -p /usr/gsh
            als=$(cat /${HOME}/.bashrc | grep gsh)
            if [ "$als" == "" ]
            then
                echo "alias gsh='bash /usr/gsh/script-files/gsh'" >> ~/.bashrc
            fi
            echo "Do you have a tar archive from a previous install?(y/N)"
            read ans
            ans="${ans:-n}"
            ans=$(echo $ans | awk '{print tolower($0)}')
            if [ "$ans" == "y" ]
            then
                echo "What is the full file path of the tar archive?(/path/to/archive/gsh-docker-archive.tar.gz)"
                read filepath
                tar -xzf $filepath /
                ec=$?
                if [ $ec -eq 0 ]
                then
                    echo "Extracted contents if gsh-docker-archive.tar.gz successfully. Moving to next step."
                else
                    echo "Failed to properly extract archive contents! Exiting..."
                    exit 1
                fi
                cp -r ./gsh/messages /usr/gsh
                cp -r ./gsh/script-files /usr/gsh
            else
                cp -r ./gsh /usr
            fi
        fi
        if ! [ -d /usr/gsh/environment ]
        then
            mkdir -p /usr/gsh/environment
            cp ./examples/donation-ctrl.env /usr/gsh/environment/donation-ctrl.env
            cp ./examples/donation-ticker.env /usr/gsh/environment/donation-ticker.env
            setfacl -m u:${USER}:rw /usr/gsh/environment/donation-ticker.env
        fi
        if ! [ -f /usr/gsh/docker/factorio/factorio.env ]
        then
            cp ./examples/factorio.env /usr/gsh/docker/factorio/factorio.env
        fi
        if ! [ -f /usr/gsh/docker/satisfactory/satisfactory.env ]
        then
            cp ./examples/satisfactory.env /usr/gsh/docker/satisfactory/satisfactory.env
        fi
        if ! [ -f /usr/gsh/docker/minecraft/minecraft.env ]
        then
            cp ./examples/minecraft.env /usr/gsh/docker/minecraft/minecraft.env
        fi
        if ! [ -f /usr/gsh/docker/veloren/veloren.env ]
        then
            cp ./examples/veloren.env /usr/gsh/docker/veloren/veloren.env
        fi
        echo "$asciilogo"
        printf '\n'
        echo "Thank you for 'installing' Game Server Helper!"
        echo "If you have any feature requests please reach"
        echo "out to dev+gsh-feature-requests@lollypopstealer.com"
        echo "with any game's that can run through docker or"
        echo "that have easy to read documentation for running"
        echo "their server on linux. Have a great day!"
    elif [ $rsp == 'no' ]
    then
        echo "$asciilogo"
        echo "Thank you for running the install script for 'Game Server Helper', however, you did not confirm the installation so the script will now exit. Have a great day!"
    fi
fi
